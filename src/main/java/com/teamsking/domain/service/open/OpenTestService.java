package com.teamsking.domain.service.open;

import com.teamsking.api.dto.open.AddOpenTestQuizDto;
import com.teamsking.api.dto.open.OpenIdAndNameDto;
import com.teamsking.api.dto.open.OpenTestDtoMapper;
import com.teamsking.api.dto.open.OpenTestNameDto;
import com.teamsking.api.dto.quiz.QuizDtoMapper;
import com.teamsking.api.dto.quiz.QuizOptionDtoMapper;
import com.teamsking.api.dto.quiz.QuizTestDto;
import com.teamsking.domain.entity.open.OpenTest;
import com.teamsking.domain.entity.open.OpenTestQuiz;
import com.teamsking.domain.entity.open.OpenUser;
import com.teamsking.domain.entity.quiz.Quiz;
import com.teamsking.domain.entity.quiz.QuizOption;
import com.teamsking.domain.entity.sys.UserStudentTest;
import com.teamsking.domain.repository.*;

import java.util.List;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
*@author linhao
*/
@Service
@Slf4j
public class OpenTestService {

    @Autowired
    OpenTestMapper openTestMapper;
    @Autowired
    OpenUserMapper openUserMapper;
    @Autowired
    UserStudentTestMapper userStudentTestMapper;

    @Autowired
    QuizMapper quizMapper;
    @Autowired
    QuizOptionMapper quizOptionMapper;
    @Autowired
    OpenTestQuizMapper openTestQuizMapper;
    /**
     *班次-测验管理列表
     * @return
     */
    public List<OpenTest> list(){

        return openTestMapper.selectAll();
    }

    /**
     *添加班次-测验管理
     * @param openTest
     * @return
     */
    public int save(OpenTest openTest){

        return openTestMapper.insert(openTest);
    }

    /**
     *删除班次-测验管理
     * @param id
     * @return
     */
    public int remove(int id){

        return openTestMapper.deleteByPrimaryKey(id);
    }

    /**
     *修改班次-测验管理
     * @param openTest
     * @return
     */
    public int modify(OpenTest openTest){

        return openTestMapper.updateByPrimaryKeySelective(openTest);
    }


    /**
     * 根据班课id获取教学管理测验信息
     * @param openId
     * @return
     */
    public List<OpenTestNameDto> getOpenTestByOpenId( Integer openId){


        OpenTest newOpenTest = new OpenTest();
        newOpenTest.setDeleteStatus(2);
        newOpenTest.setOpenId(openId);

        List<OpenTest> openTestList = openTestMapper.select(newOpenTest);

        //获取该班课下学生总数量
        OpenUser openUser = new OpenUser();
        openUser.setDeleteStatus(2);
        openUser.setOpenId(openId);
        int allUserNum = openUserMapper.selectCount(openUser);

        //数据转换
        List<OpenTestNameDto> openTestNameDtoList = OpenTestDtoMapper.INSTANCE.entityListNameDto(openTestList);

        //遍历
        for (OpenTestNameDto openTestNameDto:openTestNameDtoList) {

            //班课测验已提交人数
            UserStudentTest userStudentTest = new UserStudentTest();
            userStudentTest.setDeleteStatus(2);
            userStudentTest.setTestId(openTestNameDto.getId());
            int stopUserCount = userStudentTestMapper.selectCount(userStudentTest);

            openTestNameDto.setStopUserCount(stopUserCount);

            //总人数
            openTestNameDto.setUserCount(allUserNum);
            //未提交人数
            int notUserCount = allUserNum - stopUserCount;
            openTestNameDto.setNotUserCount(notUserCount);

        }

        return openTestNameDtoList;

    }


    /**
     * 根据班课id添加测验信息
     * @param addOpenTestQuizDto
     * @param openId
     * @return
     */
    public int saveOpenTestByOpenId(AddOpenTestQuizDto addOpenTestQuizDto,Integer openId){

        //给班课测验表中添加信息
        OpenTest openTestEntity = OpenTestDtoMapper.INSTANCE.InterDtoEntity(addOpenTestQuizDto);
        openTestEntity.setOpenId(openId);
        openTestEntity.setDeleteStatus(2);
        int count = openTestMapper.insertSelective(openTestEntity);

        //给试题表中添加信息
        Quiz quizEntity = QuizDtoMapper.INSTANCE.InterDtoEntity(addOpenTestQuizDto);
        quizEntity.setOpenId(openId);
        quizEntity.setQuizType(addOpenTestQuizDto.getQuizType());
        quizEntity.setUseType(10);
        quizEntity.setDeleteStatus(2);
        quizMapper.insertSelective(quizEntity);

        List<QuizTestDto> quizTestDtoList = addOpenTestQuizDto.getQuizTestDtoList();


        //遍历
        for (QuizTestDto quizTestDto:quizTestDtoList){
            //给试题选项表添加信息
            QuizOption quizOption = new QuizOption();
            quizOption.setOptionTitle(quizTestDto.getOptionTitle());
            quizOption.setQuizId(quizEntity.getId());
            quizOption.setCorrectFlag(quizTestDto.getCorrectFlag());
            quizOption.setOpenId(openTestEntity.getOpenId());

            quizOptionMapper.insertSelective(quizOption);

        }

//        OpenTestQuiz openTestQuiz = new OpenTestQuiz();
//        openTestQuiz.setDeleteStatus(2);
//        openTestQuiz.setOpenId(openTestEntity.getOpenId());
//
//
//
//
//        return openTestQuizMapper.insertSelective(openTestQuiz);

        return count;

    }

}
