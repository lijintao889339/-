package com.teamsking.api.endpoint.open;

import com.github.pagehelper.PageHelper;
import com.teamsking.api.dto.open.OpenTestQuizDto;
import com.teamsking.api.dto.open.OpenTestQuizDtoMapper;
import com.teamsking.api.dto.open.OpenUserDto;
import com.teamsking.api.dto.open.OpenUserDtoMapper;
import com.teamsking.api.endpoint.BaseController;
import com.teamsking.domain.entity.open.OpenTestQuiz;
import com.teamsking.domain.entity.open.OpenUser;
import com.teamsking.domain.service.open.OpenTestQuizService;
import com.teamsking.util.Result;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
*@author linhao
*/
@RestController
@Slf4j
@Api(tags = "班次-测验与试题关系操作接口")
public class OpenTestQuizController extends BaseController {

    @Autowired
    OpenTestQuizService openTestQuizService;

    /**
     * 获取班次-测验与试题关系列表
     * @param pageNo
     * @param pageSize
     * @return
     */
    @ApiOperation(value = "班次-测验与试题关系列表", notes = "可分页", produces = "application/json")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页码", required = true, example = "1"),
            @ApiImplicitParam(name = "pageSize", value = "页大小", required = true, example = "10")
    })
    @GetMapping("/open_test_quizs")
    public Result openUserList(int pageNo, int pageSize){

        PageHelper.startPage(fixPage(pageNo),fixPage(pageSize));
        List<OpenTestQuiz> openTestQuizList = openTestQuizService.list();
        List<OpenTestQuizDto> openTestQuizDtoList = OpenTestQuizDtoMapper.INSTANCE.entityListToDtoList(openTestQuizList);
        return Result.success().addData("pager",warpPage(openTestQuizDtoList));
    }

    /**
     * 添加班次-测验与试题关系
     * @param openTestQuiz
     * @return
     */
    @ApiOperation(value = "添加班次-测验与试题关系", consumes = "application/json")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "openTestQuiz", value = "班次-学生选课", required = true, dataType = "OpenTestQuizDto")
    })
    @PostMapping("/open_test_quiz")
    public Result addOpenTestQuiz(@RequestBody OpenTestQuizDto openTestQuiz){

        OpenTestQuiz openTestQuizEntity = OpenTestQuizDtoMapper.INSTANCE.dtoToEntity(openTestQuiz);
        openTestQuizService.save(openTestQuizEntity);
        return Result.success();
    }

    /**
     * 删除班次-测验与试题关系
     * @param id
     * @return
     */
    @ApiOperation(value = "删除班次-测验与试题关系", consumes = "application/json")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "班次-测验与试题关系的主键", required = true, dataType = "int")
    })
    @DeleteMapping("/open_test_quiz/{id}")
    public Result removeOpenTestQuiz(@PathVariable("id") int id){

        openTestQuizService.remove(id);
        return Result.success();
    }

    /**
     * 修改班次-测验与试题关系
     * @param id
     * @param openTestQuiz
     * @return
     */
    @ApiOperation(value = "修改班次-测验与试题关系", consumes = "application/json")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "openTestQuiz", value = "班次-测验与试题关系", required = true, dataType = "OpenTestQuizDto")
    })
    @PutMapping("/open_test_quiz/{id}")
    public Result modifyOpenUser(@PathVariable("id") int id,
                                 @RequestBody OpenTestQuizDto openTestQuiz){

        OpenTestQuiz openTestQuizEntity = OpenTestQuizDtoMapper.INSTANCE.dtoToEntity(openTestQuiz);
        openTestQuizEntity.setId(id);
        openTestQuizService.modify(openTestQuizEntity);
        return Result.success();
    }

}
